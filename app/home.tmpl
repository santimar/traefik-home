{{ $home_container := where $ "ID" .Docker.CurrentContainerID | first }}
{{ $show_footer := or (index $home_container.Labels "traefik-home.show-footer") "true" | parseBool }}
{{ $show_status_dot := or (index $home_container.Labels "traefik-home.show-status-dot") "true" | parseBool }}
{{ $sort_by := or (index $home_container.Labels "traefik-home.sort-by") "default" }}
{{ $link_in_new_tab := or (index $home_container.Labels "traefik-home.open-link-in-new-tab") "false" | parseBool }}
{{ $target := "_self" }}
{{ if $link_in_new_tab }}
    {{ $target = "_blank" }}
{{ end }}

{{/* Read HTTP and HTTPS entrypoints from labels or use defaults */}}
{{ $http_entrypoints := split (or (index $home_container.Labels "traefik-home.http-entrypoints") "web") "," }}
{{ $https_entrypoints := split (or (index $home_container.Labels "traefik-home.https-entrypoints") "websecure") "," }}

<!DOCTYPE html>
<html lang="en" class="min-vh-100">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Home</title>
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" 
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    {{/* Some custom style */}}
    <style>

        :root {
            --tile-1-bgcolor: #3cb0c7;
            --tile-2-bgcolor: green;
            --tile-3-bgcolor: #ffc107;
        }

        div[data-name]:before {
            content: attr(data-name);
            background: red;
            min-height: 100px;
            font-size: 4em;
            text-transform: uppercase;
            color: white;
            padding: 0.5em;
            box-shadow: 5px 5px 15px -10px rgb(0 0 0 / 75%);
            display: table;
            width: 100%;
        }

        .icon {
            height: 160px;
            padding: 20px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
        }

        span[data-running] {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
        }

        span[data-running=true] {
            box-shadow: 0px 0px 10px green;
            background-color: green;
        }

        span[data-running=false] {
            box-shadow: 0px 0px 10px red;
            background-color: red;
        }

        /* first, nth+1, 2nth+1, etc*/
        .row > div:nth-of-type(3n+1) div[data-name]::before {
            background: var(--tile-1-bgcolor);
        }
        .row > div:nth-of-type(3n+2) div[data-name]::before {
            background: var(--tile-2-bgcolor);
        }
        .row > div:nth-of-type(3n+3) div[data-name]::before {
            background: var(--tile-3-bgcolor);
        }
        
        /* Enable darkmode in a Bootstrap Page */
        @media (prefers-color-scheme: dark) {
            body {
                background-color: var(--bs-dark);
                color: var(--bs-light);
            }
            footer .text-muted {
                color: rgba(var(--bs-secondary-rgb),var(--bs-text-opacity))!important;
            }
        }
    </style>
</head>
<body class="d-flex flex-column min-vh-100">
    <nav class="navbar navbar-fixed-top navbar-dark bg-dark">
        <div class="container">
            <div class="navbar-header">
                <span class="navbar-brand">
                    Applications
                </span>
            </div>
        </div>
    </nav>
    <div class="container my-auto pb-4">
        {{/* Display only containers explicitly enabled */}}
        {{ $containers := whereLabelValueMatches $ "traefik.enable" "true" }}
        {{ if eq $sort_by "name" }}
            {{ $containers = sortObjectsByKeysAsc $containers "Name" }}
        {{ end }}
        <div class="row align-content-center justify-content-evenly">            
            {{ range $container := $containers }}        

                {{/* Do not show myself */}}
                {{ if eq $container.ID $home_container.ID }}
                    {{continue}}
                {{ end }}

                {{/* Do not show hidden containers */}}
                {{ $hide_container := or (index $container.Labels "traefik-home.hide") "false" | parseBool }}   
                {{ if $hide_container }}
                    {{continue}}
                {{ end }}

                {{/* host is saved on a label like traefik.http.routers.<name>.rule */}}
                {{/* since <name> is unknown, we must cycle throught all labels */}}
                {{ $service_name := "" }}
                {{ range $k := keys $container.Labels}}
                    {{ if (regexMatch "traefik\\.http\\.routers\\.(.)+\\.rule" $k) }}
                        {{ $service_name = regexReplaceAll "traefik\\.http\\.routers\\.([^\\.]+)\\.rule" $k "$1" }}
                        {{break}}
                    {{ end }}
                {{ end }}

                {{/* skip container if service_name was not found */}}
                {{ if eq $service_name "" }}
                    {{continue}}
                {{ end }}

                {{ $host_label := print "traefik.http.routers." $service_name ".rule" }}
                {{ $host_rule := index $container.Labels $host_label }}
                {{/* Get the first parameter if host contains multiple values */}}
                {{ $host_rule := split $host_rule "," | first }}
                {{ $host := regexReplaceAll "Host\\(\\`([a-z0-9-\\.]+)\\`\\).*" $host_rule "$1" }}

                {{/* Define an empty path in case the rules don't specify one*/}}
                {{ $path := "" }}
                {{if (regexMatch ".*?Path(Prefix)?\\(\\`([a-z0-9-\\/]+)\\`\\).*" $host_rule) }}
                    {{ $path = regexReplaceAll ".*?Path(Prefix)?\\(\\`([a-z0-9-\\/]+)\\`\\).*" $host_rule "$2" }}
                {{end}}

            {{ $entrypoint_label := print "traefik.http.routers." $service_name ".entrypoints" }}
            {{ $entrypoints := index $container.Labels $entrypoint_label }}
            {{ $protocol := "" }}

            {{/* Check if entrypoints label is defined and split into an array */}}
            {{ if $entrypoints }}
                {{ $entrypoints_list := split $entrypoints "," }}

                {{/* Flag to determine if a matching entrypoint was found */}}
                {{ $entrypoint_found := false }}

                {{/* Check if entrypoint is in the HTTPS entrypoints list */}}
                {{ range $entrypoints_list }}
                    {{ $current_entrypoint := . }}
                    {{ $is_https := false }}
                    {{ $is_http := false }}

                    {{ range $https_entrypoints }}
                        {{ if eq $current_entrypoint . }}
                            {{ $is_https = true }}
                            {{break}}
                        {{ end }}
                    {{ end }}

                    {{ if $is_https }}
                        {{ $protocol = "https" }}
                        {{ $entrypoint_found = true }}
                        {{break}}
                    {{ end }}
                    {{ if $is_http }}
                        {{ $protocol = "http" }}
                        {{ $entrypoint_found = true }}
                        {{break}}
                    {{ end }}
                {{ end }}

                {{/* Skip container if no supported entrypoint was found */}}
                {{ if not $entrypoint_found }}
                    {{continue}}
                {{ end }}
            {{ else }}
                {{/* Skip container if entrypoints label is not defined */}}
                {{continue}}
            {{ end }}

                <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6 col-6 mt-4 mx-xl-2">
                    <a class="text-decoration-none text-secondary" target="{{ $target }}" href="{{ print $protocol "://" $host $path }}">
                        <div class="row-cols-1 text-center">
                            {{/* if icon is set for this docker image then display it, otherwise use a generic icon made up by the first 2 letters */}}
                            {{ $icon := index $container.Labels "traefik-home.icon"}}
                            {{ $name := or (index $container.Labels "traefik-home.alias") $container.Name }}                   
                            {{ if $icon }}
                                <div style="background-image: url({{ $icon }})" class="col mb-3 icon"></div>
                            {{ else }}
                                <div data-name='{{ substr 0 2 $name }}' class="col mb-3"></div>
                            {{ end }}
                            <span class="col text-capitalize">
                                {{ if $show_status_dot }}
                                    <span data-running="{{ $container.State.Running }}" class="me-2"></span>
                                {{ end }}
                                {{ $name }}
                            </span>
                        </div>
                    </a>
                </div>
            {{ end }}
        </div>   
    </div>
    {{ if $show_footer }}
        <footer class="border-top d-flex justify-content-center justify-content-xl-end px-xl-5 py-3">
            <ul class="nav">
                <li class="nav-item">
                    <span class="nav-link px-2">
                        <span class="badge bg-secondary position-relative" id="badge-tag">{{ index $home_container.Labels "org.opencontainers.image.version" }}</span>
                    </span>
                </li>
                <li class="nav-item" id="menu-item-new-version"></li>
                <li class="nav-item">
                    <a href="https://github.com/santimar/traefik-home" class="nav-link px-2 text-muted">About</a>
                </li>
            </ul>
        </footer>
        <script>
            const current_version = "{{ index $home_container.Labels "org.opencontainers.image.version" }}";
            fetch("https://api.github.com/repos/santimar/traefik-home/releases/latest", {"headers": {"Accept": "application/vnd.github.v3+json"}})
                .then(response => response.json())
                .then(response => {
                    const last_version = response.tag_name;
                    if (last_version !== current_version) {
                        console.log("New version available", current_version, "->", last_version);
                        let badge = document.getElementById("badge-tag");
                        let menu_item = document.getElementById("menu-item-new-version");
                        badge.innerHTML += '<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">!</span>';
                        menu_item.innerHTML = '<a href="https://github.com/santimar/traefik-home/releases/latest" class="nav-link px-2 text-decoration-underline text-muted">New version available</a>';
                    }
                })
                .catch(error => console.error("There was an error while checking for updates. If this happens regularly, open an issue here: https://github.com/santimar/traefik-home/issues", error));
        </script>
    {{ end }}
</body>
</html>
